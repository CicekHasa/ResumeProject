-git branch branch_name: Yeni branch oluşturur.
- git checkout branche_name: Hedeflenen branch'e geçiş yapar.
- Bir cshtml dosyasında background-image de parantez içinde url verilirse url'in başında tilda(~) olmaz!
	.Örnek:style="background-image: url(~/Content/sidebar-01/images/logo.jpg)
-ORM(Object Relational Mapping): Veritabanındaki tablolar ile yazılım uygulamasındaki sınıflar arasında bir köprü görevi görür.
	-ORM araçları, SQL sorguları yapmadan nesneler ve sınıflar aracılığıyla veritabanı işlemleri yapmamızı sağlar.
-Entity Framework(EF): ORM aracıdır. .Net tabanı uygulamalarda veri iletişimi hızlandırmak ve basitleştirmek için kullanılır.
	-EF, çeşitli gliştirme yaklaşımlarını destekler. Bunlardan bazıları:
		-Code First:Veritabanı şeması C# kodu ile tanımlanan sınıflar aracılığı ile oluşturulur. Bu yaklaşımda sınıflar tabloları, propertyler de sütunları temsil eder.
		-Db first: Varolan bir veritabanından yola çıkılarak, EF, bu veritabanı şemasını temel alarak entity sınıflarını oluşturur. Veritabanı önceden oluşturulur. Bu yaklaşımda Tablolar sınıflara, sütunlar property lere dönüştürülür.
-Ef de kendine özgü metotlar vardır Bunlar:
	-ToList, Add, Update, Remove, Find...
-DbFirst yaklaşımı ile projeyi oluşturma adımları
	1.Model Oluştur.
	2.Modeli İncele.
	3.Controller 
	4.View

-a connection was successfully established with the server but then an error during login process HATASI: Model klasöründe db ye bağlanırken bu hatayı verdi. Çözüm için db name'i yapıştırdıktan sonra Encrypt seçeneğindeki "Mandatory" yerine "Optinal" alanını seçmeniz gerek!
-Models da bir db şeması oluşturduğunuzda bir tane entities sınıfı oluşur. Adı da var olan projenize benzer. (Bendeki Örnek:DbResumeEnitites)
-Tolist(): EF'in bir metodudur. Tablodaki verileri listelemek için kullanılır.
-Add(): EF'in bir methodudur. Tabloya veri eklemek için kullanılır.
-SaveChanges(): EF'in bir methodudur. Tabloya eklenen veriyi kayıt etmek için kullanılır.
-Find(): EF'in bir methodudur. Tabloda veri bulmaya yarar.
<table class="table table-bordered"></table>: Tablonun kenarlıklarına çizgi ekler.
-btn btn-outline-danger: İçi boş kırmızı renkte buton oluşturur.
-btn btn-outline-success:İçi boş yeşil renkte buton oluşturur.
-btn btn-outline-primary: İçi boş mavi renkte buton oluşturur.
-Attribute: Bir niteliktir. Belirli programlama öğelerine(sınıf,method,özellik...) ek bilgi sağlamak amacı ile yapılan meta-veri yapılardır.
Genelde köşeli parantez ile ifade edilir.
-[HttpGet]: Bir attribute dür. Oluşturulan methodun üzerinde kullanıldığında sayfa sadece yüklendiği zaman çalışmasını sağlar. Get isteği gelindiğinde çalışır yani.
-Overload(Aşırı Yükleme): Bir method da birden fazla aynı adda ancak farklı parametrelerde oluşturulursa buna overload denir.
-[HttpPost]//Bir view içinde herhangi bir butona tıklandığında bu attribute'ün altındaki method çalışır.
-RedirectToAction("action_name"): Aynı controller içinde farklı bir action methoduna gitmek için kullanılan bir methoddur.
- @Html.TextBoxFor(x=>x.SkillID, new{@class="form-control"}): Verileri çekerken html helper'ın textboxfor özelliği kullanılır. form-control da textbox'ın düzgün gözükmesi için bu şekilde kullanılıyor.
-Tabloya verileri kaydetme işleminde input textlerde eğer name yazılmazsa boş bir kayıt oluşur. Yazılan değer sütunda gözükmez!!!
-@Html.TextBoxFor(x => x.SkillID, new {@readonly = "readonly" }): readonly özelliği textbox da veri gözüksü ancak set edilememesi için kullanılır.
-Yukarıda readonly özelliği yerine Id hiç getirmeden ancak arka planda da kullanmak için html helperlarından "HiddenFor" özelliğini de kulalnabiliriz.
-Bir view içinde form oluşturuyorsan ve method kısmı post değil ise o view'e ait controllerdaki httpost durumundaki method çalışmaz!!!
-VivewBag: Controller dan View kısmına veri taşımak için kullanılan bir komuttur.
-Count(): EF'in bir methodudur. Tablodaki kayıt sayısını verir.
-Where(): EF'in bir methodudur. Tablodaki veri için koşul koymamıza yarar.
-Select(): EF'in bir methodudur. Tablodaki seçmek istediğimiz sütunu belirtmek için kullanırız.
-FirstOrDefault(): EF'in bir methodudur. Tek bir kayıt veya veri değeri dönen sorguda listelemek için kullanılır. Bunun yerine ToList() de kullanılabilir.
-Sum(): EF'in bir methodudur. Tablodaki seçilen sütundaki toplam değeri döndürür.
-Average(): EF'in bir methodudur. Tablodaki seçilen sütunun ortalama değerini döndürür.
-Max(): EF'in bir methodudur. Seçilen sütundaki en büyük değeri döndürür.
